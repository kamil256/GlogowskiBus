@model GlogowskiBus.UI.Models.HomeBusPositionsViewModel

@{ 
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Autobusy i przystanki";
}

@*<div id="navigation" data-bind="visible: view() == 'Navigation'">
    <p>Pokaż/ukryj linie:</p>
    <ul id="busLinesTiles" data-bind="foreach: busLines">
        <li data-bind="click: function() { hidden(!hidden()); }, css: { active: !hidden() }, text: busNumber"></li>
    </ul>
    <p>
        <span class="textButton">Pokaż wszystkie</span> | <span class="textButton">Ukryj wszystkie</span>
    </p>
</div>

<div id="findRoute" data-bind="visible: view() == 'FindRoute'">
</div>*@

<div id="timeTable">
    <!-- ko if: isSelected -->
        <p>PRZYSTANEK</p>
        <select class="form-control" data-bind="options: busStops, optionsText: 'name', optionsCaption: '-', value: selectedBusStop"></select>
        <br />

        <!-- ko if: selectedBusStop() -->
            <p>LINIA</p>
            <ul id="busLinesTiles" data-bind="foreach: selectedBusStop().busLines">
                <li data-bind="@*attr: { title: busStops()[0].name() + ' - ' + busStops()[busStops().length - 1].name() },*@ click: function() { $root.selectDepartureTime($data.getNextDepartureTime()); }, css: { active: $root.selectedBusLine() === $data }, text: busNumber()"></li>
            </ul>
        <!-- /ko -->

        <!-- ko if: selectedBusStop() && selectedBusLine() -->
            <ul class="dayOfWeek" data-bind="foreach: serverTime.daysOfWeek">
                <li data-bind="css: { active: $data == $root.selectedDayOfWeek() }, click: function(data, event) { $root.selectedDayOfWeek($data); }, text: $data"></li>
            </ul>

            <table cellspacing="0" class="timeTable">
                <tr>
                    <td>
                        <table class="busStops" data-bind="foreach: selectedBusStops()">
                            <tr>
                                <td data-bind="css: { active: timeOffset() == 0 }, text: timeOffset() == 0 ? timeOffset() : (timeOffset() > 0 ? '+' + timeOffset() : '')"></td>
                                <td data-bind="click: function(data, event) { $root.selectedBusStop($root.selectedRoute().busStops()[$index()]); }, css: { active: timeOffset() == 0 }, text: name"></td>
                            </tr>
                        </table>
                    </td>

                    <td>
                        <table class="departureTimes" data-bind="foreach: departureTimesOfSelectedBusLine">
                            <tr data-bind="visible: $root.departureTimesOfSelectedBusLine()[$index()].length > 0">
                                <td>
                                    <div data-bind="text: $index"></div>
                                </td>
                                <td data-bind="foreach: $root.departureTimesOfSelectedBusLine()[$index()]">
                                    <div data-bind="attr: { title: originalDepartureTime.route.details() }, click: function() { $root.selectDepartureTime(originalDepartureTime); }, css: { active: originalDepartureTime === $root.selectedDepartureTime() }">
                                        <span data-bind="text: minutes < 10 ? '0' + minutes : minutes"></span><sub data-bind="text: originalDepartureTime.route.indexMark()"></sub>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        <!-- /ko -->
    <!-- /ko -->
</div>

<div id="findRoute">
    <!-- ko if: isSelected -->
    <!-- /ko -->
</div>

<script>
    window.onload = function()
    {
        markerIcons = new MarkerIcons();
        serverTime = new ServerTime(@Model.ServerTimeMilliseconds);

        var engine = new Engine();



        var timeTableViewModel = new TimeTableViewModel(engine);
        ko.applyBindings(timeTableViewModel, document.getElementById('timeTable'));

        var findRouteViewModel = new FindRouteViewModel(engine);
        ko.applyBindings(findRouteViewModel, document.getElementById('findRoute'));

        navigationViewModel = new NavigationViewModel();

        navigationViewModel.addViewGroup([timeTableViewModel, findRouteViewModel]);
        navigationViewModel.start();

        ko.applyBindings(navigationViewModel, document.getElementById('tabs'));
    }
</script>